// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Example {
  id String @id @default(cuid())
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  files         File[]
  folders       Folder[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Folder {
  id             String   @id @default(cuid())
  cid            String   @unique
  name           String
  user           User     @relation(fields: [userId], references: [id])
  userId         String
  parentFolder   Folder?  @relation("FolderParentFolder", fields: [parentFolderId], references: [id])
  parentFolderId String?
  subFolders     Folder[] @relation("FolderParentFolder")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now())

  @@unique([userId, cid])
  @@unique([userId, id])
}

model File {
  id          String   @id @default(cuid())
  cid         String   @unique
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  pinataId    String
  name        String
  mimeType    String
  size        Float
  metaData    Json
  pinToIpfs   Boolean?
  isDuplicate Boolean

  @@unique([userId, cid])
  @@unique([userId, id])
}
